// Generated by CoffeeScript 1.4.0
(function() {
  var HtmlAngularjsCompiler, fs, sysPath;

  sysPath = require('path');

  fs = require('fs');

  module.exports = HtmlAngularjsCompiler = (function() {

    HtmlAngularjsCompiler.prototype.brunchPlugin = true;

    HtmlAngularjsCompiler.prototype.type = 'template';

    HtmlAngularjsCompiler.prototype.extension = 'html';

    HtmlAngularjsCompiler.prototype.pattern = /\.(?:html)$/;

    function HtmlAngularjsCompiler(config) {
      this.config = config;
      null;
    }

    HtmlAngularjsCompiler.prototype.compile = function(data, path, callback) {
      var error, parsedHtml, result;
      try {
        parsedHtml = this.parseHtml(data);
        path = path.substring(path.indexOf('/') + 1, path.length);
        return result = ".run(['$templateCache', function($templateCache){$templateCache.put('" + path + "', '" + parsedHtml + "')}])";
      } catch (err) {
        return error = err;
      } finally {
        callback(error, result);
      }
    };

    HtmlAngularjsCompiler.prototype.parseHtml = function(str) {
      return str.replace(/'/g, "\\'").replace(/\n/g, '');
    };

    HtmlAngularjsCompiler.prototype.onCompile = function(compiled) {
      var data, file, filePath, filePaths, key, moduleName, pubDir, _i, _len, _ref, _ref1, _results;
      moduleName = ((_ref = this.config.plugins) != null ? (_ref1 = _ref['html-angularjs-brunch']) != null ? _ref1.module : void 0 : void 0) || 'partials';
      filePaths = [];
      for (key in this.config.files.templates.joinTo) {
        filePaths.push(key);
      }
      pubDir = this.config.paths["public"];
      _results = [];
      for (_i = 0, _len = compiled.length; _i < _len; _i++) {
        file = compiled[_i];
        _results.push((function() {
          var _j, _len1, _results1;
          _results1 = [];
          for (_j = 0, _len1 = filePaths.length; _j < _len1; _j++) {
            filePath = filePaths[_j];
            if (file.path === ("" + pubDir + "/" + filePath)) {
              data = fs.readFileSync(file.path);
              _results1.push(fs.writeFileSync(file.path, "angular.module('" + moduleName + "', [])" + data + ";"));
            } else {
              _results1.push(void 0);
            }
          }
          return _results1;
        })());
      }
      return _results;
    };

    return HtmlAngularjsCompiler;

  })();

}).call(this);
